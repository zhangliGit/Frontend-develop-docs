{"expireTime":9007200829503283000,"key":"gatsby-mdx-fix-entire-payload-4577489d98fe089e515728533858e5b1-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"UI框架","position":{"start":{"line":1,"column":3,"offset":2},"end":{"line":1,"column":7,"offset":6},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":7,"offset":6},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"antd-design","position":{"start":{"line":3,"column":4,"offset":13},"end":{"line":3,"column":15,"offset":24},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":10},"end":{"line":3,"column":15,"offset":24},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"项目开发使用","position":{"start":{"line":5,"column":3,"offset":30},"end":{"line":5,"column":9,"offset":36},"indent":[]}},{"type":"link","title":null,"url":"https://ant.design/docs/react/introduce-cn","children":[{"type":"text","value":"antd-design","position":{"start":{"line":5,"column":10,"offset":37},"end":{"line":5,"column":21,"offset":48},"indent":[]}}],"position":{"start":{"line":5,"column":9,"offset":36},"end":{"line":5,"column":66,"offset":93},"indent":[]}},{"type":"text","value":"框架。","position":{"start":{"line":5,"column":66,"offset":93},"end":{"line":5,"column":69,"offset":96},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":28},"end":{"line":5,"column":71,"offset":98},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":28},"end":{"line":5,"column":71,"offset":98},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"通用组件","position":{"start":{"line":7,"column":4,"offset":105},"end":{"line":7,"column":8,"offset":109},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":102},"end":{"line":7,"column":8,"offset":109},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"antd-design组件库已经非常强大了，在实际开发中会经常用到一些高频率的组件，如表格，表单，树形菜单等，如果在不同模块中直接引用组件，对后期的功能维护和变更会造成很大的影响和工作量，所以有必要对高频率的组件进行第二次封装。","position":{"start":{"line":9,"column":3,"offset":115},"end":{"line":9,"column":117,"offset":229},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":113},"end":{"line":9,"column":119,"offset":231},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":113},"end":{"line":9,"column":119,"offset":231},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"高频率组件","position":{"start":{"line":11,"column":3,"offset":237},"end":{"line":11,"column":8,"offset":242},"indent":[]}}],"position":{"start":{"line":11,"column":3,"offset":237},"end":{"line":11,"column":8,"offset":242},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"表格","position":{"start":{"line":13,"column":5,"offset":250},"end":{"line":13,"column":7,"offset":252},"indent":[]}}],"position":{"start":{"line":13,"column":5,"offset":250},"end":{"line":13,"column":7,"offset":252},"indent":[]}}],"position":{"start":{"line":13,"column":3,"offset":248},"end":{"line":14,"column":1,"offset":254},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"表单操作","position":{"start":{"line":15,"column":5,"offset":260},"end":{"line":15,"column":9,"offset":264},"indent":[]}}],"position":{"start":{"line":15,"column":5,"offset":260},"end":{"line":15,"column":9,"offset":264},"indent":[]}}],"position":{"start":{"line":15,"column":3,"offset":258},"end":{"line":16,"column":1,"offset":266},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"树形菜单结构","position":{"start":{"line":17,"column":5,"offset":272},"end":{"line":17,"column":11,"offset":278},"indent":[]}}],"position":{"start":{"line":17,"column":5,"offset":272},"end":{"line":17,"column":11,"offset":278},"indent":[]}}],"position":{"start":{"line":17,"column":3,"offset":270},"end":{"line":18,"column":1,"offset":280},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"弹出层","position":{"start":{"line":19,"column":5,"offset":286},"end":{"line":19,"column":8,"offset":289},"indent":[]}}],"position":{"start":{"line":19,"column":5,"offset":286},"end":{"line":19,"column":8,"offset":289},"indent":[]}}],"position":{"start":{"line":19,"column":3,"offset":284},"end":{"line":19,"column":8,"offset":289},"indent":[]}}],"position":{"start":{"line":13,"column":3,"offset":248},"end":{"line":19,"column":8,"offset":289},"indent":[1,3,1,3,1,3]}}],"position":{"start":{"line":11,"column":1,"offset":235},"end":{"line":19,"column":8,"offset":289},"indent":[1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":11,"column":1,"offset":235},"end":{"line":19,"column":8,"offset":289},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"组件开发","position":{"start":{"line":21,"column":4,"offset":296},"end":{"line":21,"column":8,"offset":300},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":293},"end":{"line":21,"column":8,"offset":300},"indent":[]}},{"type":"jsx","value":"<p class=\"tip-warn\">\n  <h4>说明</h4>\n  为了避免公共组件在项目开发过程中遇到版本问题，会单独在一个工程中进行组件的开发和维护，然后进行发布，实际项目中只进行更新组件操作。\n</p>","position":{"start":{"line":23,"column":1,"offset":304},"end":{"line":26,"column":5,"offset":414},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"发布组件","position":{"start":{"line":28,"column":4,"offset":421},"end":{"line":28,"column":8,"offset":425},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":418},"end":{"line":28,"column":8,"offset":425},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"在工程中使用如下命令进行发布","position":{"start":{"line":30,"column":3,"offset":431},"end":{"line":30,"column":17,"offset":445},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":429},"end":{"line":30,"column":19,"offset":447},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":429},"end":{"line":30,"column":19,"offset":447},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"npm run web-com","position":{"start":{"line":32,"column":1,"offset":451},"end":{"line":34,"column":4,"offset":478},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"更新组件","position":{"start":{"line":36,"column":4,"offset":485},"end":{"line":36,"column":8,"offset":489},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":482},"end":{"line":36,"column":8,"offset":489},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"在实际开发项目中使用如下命令","position":{"start":{"line":38,"column":3,"offset":495},"end":{"line":38,"column":17,"offset":509},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":493},"end":{"line":38,"column":19,"offset":511},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":493},"end":{"line":38,"column":19,"offset":511},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"npm run update","position":{"start":{"line":40,"column":1,"offset":515},"end":{"line":42,"column":4,"offset":541},"indent":[1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":44,"column":1,"offset":543},"end":{"line":44,"column":31,"offset":573},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":44,"column":31,"offset":573}}},"scopeImports":["import React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"ui框架\",\n    \"className\": \"__internal\"\n  }, \"UI\\u6846\\u67B6\", mdx(\"a\", _extends({\n    parentName: \"h1\"\n  }, {\n    \"href\": \"#ui%E6%A1%86%E6%9E%B6\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }), \"#\")), mdx(\"h2\", {\n    \"id\": \"antd-design\",\n    \"className\": \"__internal\"\n  }, \"antd-design\", mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#antd-design\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }), \"#\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\u9879\\u76EE\\u5F00\\u53D1\\u4F7F\\u7528\", mdx(\"a\", _extends({\n    parentName: \"strong\"\n  }, {\n    \"href\": \"https://ant.design/docs/react/introduce-cn\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"antd-design\"), \"\\u6846\\u67B6\\u3002\")), mdx(\"h2\", {\n    \"id\": \"通用组件\",\n    \"className\": \"__internal\"\n  }, \"\\u901A\\u7528\\u7EC4\\u4EF6\", mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#%E9%80%9A%E7%94%A8%E7%BB%84%E4%BB%B6\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }), \"#\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"antd-design\\u7EC4\\u4EF6\\u5E93\\u5DF2\\u7ECF\\u975E\\u5E38\\u5F3A\\u5927\\u4E86\\uFF0C\\u5728\\u5B9E\\u9645\\u5F00\\u53D1\\u4E2D\\u4F1A\\u7ECF\\u5E38\\u7528\\u5230\\u4E00\\u4E9B\\u9AD8\\u9891\\u7387\\u7684\\u7EC4\\u4EF6\\uFF0C\\u5982\\u8868\\u683C\\uFF0C\\u8868\\u5355\\uFF0C\\u6811\\u5F62\\u83DC\\u5355\\u7B49\\uFF0C\\u5982\\u679C\\u5728\\u4E0D\\u540C\\u6A21\\u5757\\u4E2D\\u76F4\\u63A5\\u5F15\\u7528\\u7EC4\\u4EF6\\uFF0C\\u5BF9\\u540E\\u671F\\u7684\\u529F\\u80FD\\u7EF4\\u62A4\\u548C\\u53D8\\u66F4\\u4F1A\\u9020\\u6210\\u5F88\\u5927\\u7684\\u5F71\\u54CD\\u548C\\u5DE5\\u4F5C\\u91CF\\uFF0C\\u6240\\u4EE5\\u6709\\u5FC5\\u8981\\u5BF9\\u9AD8\\u9891\\u7387\\u7684\\u7EC4\\u4EF6\\u8FDB\\u884C\\u7B2C\\u4E8C\\u6B21\\u5C01\\u88C5\\u3002\")), mdx(\"ul\", null, mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"__internal\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u9AD8\\u9891\\u7387\\u7EC4\\u4EF6\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"__internal\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u8868\\u683C\")), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"__internal\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u8868\\u5355\\u64CD\\u4F5C\")), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"__internal\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u6811\\u5F62\\u83DC\\u5355\\u7ED3\\u6784\")), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"__internal\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u5F39\\u51FA\\u5C42\"))))), mdx(\"h2\", {\n    \"id\": \"组件开发\",\n    \"className\": \"__internal\"\n  }, \"\\u7EC4\\u4EF6\\u5F00\\u53D1\", mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#%E7%BB%84%E4%BB%B6%E5%BC%80%E5%8F%91\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }), \"#\")), mdx(\"p\", {\n    className: \"tip-warn\"\n  }, mdx(\"h4\", null, \"\\u8BF4\\u660E\"), \"\\u4E3A\\u4E86\\u907F\\u514D\\u516C\\u5171\\u7EC4\\u4EF6\\u5728\\u9879\\u76EE\\u5F00\\u53D1\\u8FC7\\u7A0B\\u4E2D\\u9047\\u5230\\u7248\\u672C\\u95EE\\u9898\\uFF0C\\u4F1A\\u5355\\u72EC\\u5728\\u4E00\\u4E2A\\u5DE5\\u7A0B\\u4E2D\\u8FDB\\u884C\\u7EC4\\u4EF6\\u7684\\u5F00\\u53D1\\u548C\\u7EF4\\u62A4\\uFF0C\\u7136\\u540E\\u8FDB\\u884C\\u53D1\\u5E03\\uFF0C\\u5B9E\\u9645\\u9879\\u76EE\\u4E2D\\u53EA\\u8FDB\\u884C\\u66F4\\u65B0\\u7EC4\\u4EF6\\u64CD\\u4F5C\\u3002\"), mdx(\"h2\", {\n    \"id\": \"发布组件\",\n    \"className\": \"__internal\"\n  }, \"\\u53D1\\u5E03\\u7EC4\\u4EF6\", mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#%E5%8F%91%E5%B8%83%E7%BB%84%E4%BB%B6\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }), \"#\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\u5728\\u5DE5\\u7A0B\\u4E2D\\u4F7F\\u7528\\u5982\\u4E0B\\u547D\\u4EE4\\u8FDB\\u884C\\u53D1\\u5E03\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"npm run web\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"-\"), \"com\"))), mdx(\"h2\", {\n    \"id\": \"更新组件\",\n    \"className\": \"__internal\"\n  }, \"\\u66F4\\u65B0\\u7EC4\\u4EF6\", mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#%E6%9B%B4%E6%96%B0%E7%BB%84%E4%BB%B6\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }), \"#\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\u5728\\u5B9E\\u9645\\u5F00\\u53D1\\u9879\\u76EE\\u4E2D\\u4F7F\\u7528\\u5982\\u4E0B\\u547D\\u4EE4\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"npm run update\"))));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"ui框架\",\n      \"className\": \"__internal\"\n    }}>{`UI框架`}<a parentName=\"h1\" {...{\n        \"href\": \"#ui%E6%A1%86%E6%9E%B6\",\n        \"aria-hidden\": true,\n        \"className\": \"anchor\"\n      }}>{`#`}</a></h1>\n    <h2 {...{\n      \"id\": \"antd-design\",\n      \"className\": \"__internal\"\n    }}>{`antd-design`}<a parentName=\"h2\" {...{\n        \"href\": \"#antd-design\",\n        \"aria-hidden\": true,\n        \"className\": \"anchor\"\n      }}>{`#`}</a></h2>\n    <p><strong parentName=\"p\">{`项目开发使用`}<a parentName=\"strong\" {...{\n          \"href\": \"https://ant.design/docs/react/introduce-cn\",\n          \"target\": \"_blank\",\n          \"rel\": \"nofollow noopener noreferrer\"\n        }}>{`antd-design`}</a>{`框架。`}</strong></p>\n    <h2 {...{\n      \"id\": \"通用组件\",\n      \"className\": \"__internal\"\n    }}>{`通用组件`}<a parentName=\"h2\" {...{\n        \"href\": \"#%E9%80%9A%E7%94%A8%E7%BB%84%E4%BB%B6\",\n        \"aria-hidden\": true,\n        \"className\": \"anchor\"\n      }}>{`#`}</a></h2>\n    <p><strong parentName=\"p\">{`antd-design组件库已经非常强大了，在实际开发中会经常用到一些高频率的组件，如表格，表单，树形菜单等，如果在不同模块中直接引用组件，对后期的功能维护和变更会造成很大的影响和工作量，所以有必要对高频率的组件进行第二次封装。`}</strong></p>\n    <ul>\n      <li parentName=\"ul\" {...{\n        \"className\": \"__internal\"\n      }}>\n        <p parentName=\"li\">{`高频率组件`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\" {...{\n            \"className\": \"__internal\"\n          }}>\n            <p parentName=\"li\">{`表格`}</p>\n          </li>\n          <li parentName=\"ul\" {...{\n            \"className\": \"__internal\"\n          }}>\n            <p parentName=\"li\">{`表单操作`}</p>\n          </li>\n          <li parentName=\"ul\" {...{\n            \"className\": \"__internal\"\n          }}>\n            <p parentName=\"li\">{`树形菜单结构`}</p>\n          </li>\n          <li parentName=\"ul\" {...{\n            \"className\": \"__internal\"\n          }}>\n            <p parentName=\"li\">{`弹出层`}</p>\n          </li>\n        </ul>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"组件开发\",\n      \"className\": \"__internal\"\n    }}>{`组件开发`}<a parentName=\"h2\" {...{\n        \"href\": \"#%E7%BB%84%E4%BB%B6%E5%BC%80%E5%8F%91\",\n        \"aria-hidden\": true,\n        \"className\": \"anchor\"\n      }}>{`#`}</a></h2>\n    <p class=\"tip-warn\">\n  <h4>说明</h4>\n  为了避免公共组件在项目开发过程中遇到版本问题，会单独在一个工程中进行组件的开发和维护，然后进行发布，实际项目中只进行更新组件操作。\n    </p>\n    <h2 {...{\n      \"id\": \"发布组件\",\n      \"className\": \"__internal\"\n    }}>{`发布组件`}<a parentName=\"h2\" {...{\n        \"href\": \"#%E5%8F%91%E5%B8%83%E7%BB%84%E4%BB%B6\",\n        \"aria-hidden\": true,\n        \"className\": \"anchor\"\n      }}>{`#`}</a></h2>\n    <p><strong parentName=\"p\">{`在工程中使用如下命令进行发布`}</strong></p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"js\"\n    }}><pre parentName=\"div\" {...{\n        \"className\": \"language-js\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-js\"\n        }}>{`npm run web`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`-`}</span>{`com`}</code></pre></div>\n    <h2 {...{\n      \"id\": \"更新组件\",\n      \"className\": \"__internal\"\n    }}>{`更新组件`}<a parentName=\"h2\" {...{\n        \"href\": \"#%E6%9B%B4%E6%96%B0%E7%BB%84%E4%BB%B6\",\n        \"aria-hidden\": true,\n        \"className\": \"anchor\"\n      }}>{`#`}</a></h2>\n    <p><strong parentName=\"p\">{`在实际开发项目中使用如下命令`}</strong></p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"js\"\n    }}><pre parentName=\"div\" {...{\n        \"className\": \"language-js\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-js\"\n        }}>{`npm run update`}</code></pre></div>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}